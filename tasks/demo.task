# Author: Ville Suoranta
# Title: TASK LANGUAGE DEMONSTRATION
# Description:
#   TASK programming language is a very primitive framework of commands
#   that has taken it's inspiration from languages like BASIC. The aim
#   was to re-create the joy of simple proramming and easy automation
#   without the need to learn modern software engineering jargon.
#
# ToDo:
# - _GETCOL = gets cursor column number
# - _GETROW = gets cursor row number
# - Use above to move demos dynamically to correct position

@START
RUN cls

# Initialize variables
SET $VAR1 = "n"
SET $VAR2 = 0

# Display budostacker
RUN cls
RUN _IMAGE -x 0 -y 2 -file tasks/assets/budostacker.bmp
RUN _TEXT -x 45 -y 65 -text "PRESS ANY KEY TO CONTINUE"
RUN _KEYS
RUN cls

# Display the start menu
RUN _IMAGE -x 0 -y 0 -file tasks/assets/bg_blue.bmp
RUN _BEEP -C6 -250
@MENUSCREEN
RUN _RECT -x 40 -y 4 -width 40 -height 3 -color 256
RUN _TEXT -x 46 -y 5 -text TASK LANGUAGE DEMONSTRATION
PRINT "\n\n\n"
RUN _BAR -x 4 -y 8 -title Loading: -progress $VAR2 -color 256
IF $VAR2 < 100
  SET $VAR2 = $VAR2 + 10
  RUN _WAIT 500
  GOTO @MENUSCREEN
RUN _TEXT -x 4 -y 10 -text "Do you want to exit? [y/n]: "
INPUT $VAR1
IF $VAR1 == "y"
  GOTO @END
ELSE
  RUN _TEXT -x 4 -y 12 -text "Great! Let's continue the demo!"
WAIT 1000

# List Folder Content Demo
RUN _TEXT -x 4 -y 14 -text "CURRENT FOLDER CONTENT:"
WAIT 1000
RUN _EXE -x 4 -y 16 -- list
WAIT 2500

# Hardware Statistics Demo
RUN _TEXT -x 4 -y 37 -text "HADWARE STATISTICS:"
WAIT 2000
RUN _EXE -x 4 -y 39 -- stats
WAIT 4000

# Capturing STDOUT Demo
RUN _TEXT -x 4 -y 49 -text "CAPTURING STDOUT FROM COMMAND:"
WAIT 2500
RUN _HELLO TO $VAR1
RUN _TEXT -x 4 -y 51 -text ">> _HELLO stdout gave: " + $VAR1
WAIT 5000

# Waiting for Space
RUN _TEXT -x 4 -y 58 -text "Press SPACE to continue..."
RUN _KEYS TO $VAR2
IF $VAR2 == 4
  RUN _IMAGE -x 0 -y 0 -file tasks/assets/bg_blue.bmp
  WAIT 1000
  
# Solar Demo
RUN _TEXT -x 4 -y 5 -text "LOCATION OF FIRST FOUR PLANETS IN SOLAR SYSTEM:"
RUN _EXE -x 4 -y 7 -- solar 4
WAIT 5000

# Waiting for Space
RUN _TEXT -x 4 -y 58 -text "Press SPACE to continue..."
RUN _KEYS TO $VAR2

# Exit
@END
RUN cls

